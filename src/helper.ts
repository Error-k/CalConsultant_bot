import { BotError, GrammyError, HttpError, InlineKeyboard } from 'grammy'
import { MAIN_MENU } from './consts'
import { CommandCtx, ConversationCtx } from './types'
import mongoose from 'mongoose'
import { bot } from '.'

export const getMainMenuReply = (ctx: CommandCtx) => {
  return ctx.reply('–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—éüìã', {
    reply_markup: MAIN_MENU
  })
}

export const getErrorCatch = (error: BotError<CommandCtx>) => {
  const ctx = error.ctx
  console.error(`–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${ctx.update.update_id}`)
  const er = error.error

  if (er instanceof GrammyError) {
    console.error('–û—à–∏–±–∫–∞ –≤ –∑–∞–ø—Ä–æ—Å–µ:', er.description)
  } else if (er instanceof HttpError) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞', er)
  } else {
    console.error('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞', er)
  }
}

export const startBot = async () => {
  const MONGODB_URI = process.env.MONGODB_URI
  if (!MONGODB_URI) {
    throw new Error('MONGODB_URI is not defined')
  }

  try {
    await mongoose.connect(MONGODB_URI)
    bot.start()
    console.log('MongoDB connected, Bot started')
  } catch (error) {
    console.error('Error in startBot: ', error)
  }
}

export const getDefaultError = async (ctx: CommandCtx | ConversationCtx) => {
  const inlineKeyboard = new InlineKeyboard()
      .text('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'backToMainMenu').row()
      .url('–ß–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π', String(process.env.SUPPORT_CHAT_URL)).row()

  ctx.reply('–í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É:', {
    reply_markup: inlineKeyboard
  })
}
