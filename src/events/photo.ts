import { InlineKeyboard } from 'grammy';
import { client } from '..'
import { CommandCtx } from '../types'
import { getDefaultError } from '../helper';
import { MAIN_MENU } from '../consts';
import { User, UserRoles } from '../models/User';

export const photo = async (ctx: CommandCtx) => {
  if (!ctx.from) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ')
    return getDefaultError(ctx)
  }

  const userId = { telegramId: ctx.from.id }
  const user = await User.findOne(userId)
  const userRole = user?.role
  const freeAttemptsRest = user?.freeAttempts

  if (userRole && [UserRoles.admin, UserRoles.subscriber].includes(userRole) || (userRole === UserRoles.user && Number(freeAttemptsRest) > 0)) {
    await ctx.reply('üëÄ –†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é...')

    const photo = await ctx.getFile()
    const path = photo.file_path;
    const response = await client.responses.create({
      model: "gpt-4.1-mini",
      input: [
        {
          role: "user",
          content:
          "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–∞—Ä—Ç–∏–Ω–∫—É. –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –µ–¥–∞, –Ω–µ –±–ª—é–¥–æ –∏–ª–∏ –Ω–µ –ø—Ä–æ–¥—É–∫—Ç, —Ç–æ –Ω–∞–ø–∏—à–∏ –≤ –æ—Ç–≤–µ—Ç–µ '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –±–ª—é–¥–∞'." +
          "–ï—Å–ª–∏ —ç—Ç–æ –µ–¥–∞, –±–ª—é–¥–æ –∏–ª–∏ –ø—Ä–æ–¥—É–∫—Ç, —Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –±–ª—é–¥–∞ –∏–ª–∏ –ø—Ä–æ–¥—É–∫—Ç–∞. –ù–∞–ø–∏—à–∏ –µ–≥–æ –ë–ñ–£, –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –∫–∞–∫ –Ω–∞ 100–≥, —Ç–∞–∫ –∏ –Ω–∞ —Ü–µ–ª—É—é —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –ø–æ—Ä—Ü–∏—é" +
          "–∏ —Å–ø–æ—Å–æ–±—ã —Å–∂–µ—á—å –Ω–∞–±—Ä–∞–Ω–Ω—ã–µ –∫–∞–ª–æ—Ä–∏–∏ –ø–æ—Å–ª–µ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ –±–ª—é–¥–∞ –∏–ª–∏ –ø—Ä–æ–¥—É–∫—Ç–∞. –û—Ñ–æ—Ä–º–∏ —Å–æ —Å–º–∞–π–ª–∏–∫–∞–º–∏ –∏ –±–µ–∑ –∑–≤—ë–∑–¥–æ—á–µ–∫.",
        },
        {
          role: "user",
          content: [
            {
              type: "input_image",
              image_url: `https://api.telegram.org/file/bot${process.env.BOT_API_KEY}/${path}`,
              detail: "auto",
            }
          ],
        },
      ],
    })
    await User.findOneAndUpdate(userId, {
      freeAttempts: Number(freeAttemptsRest) - 1,
    })

    const inlineKeyboard = new InlineKeyboard()
      .text('‚úèÔ∏è –í—ã—á–µ—Å—Ç—å –∏–∑ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞', 'calculateCalories')

    await ctx.reply(response.output_text, {
      reply_markup: inlineKeyboard,
    })
  } else {
    await ctx.reply('–£ –í–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø—Ä–æ–±–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ãüò¢ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ "–ö–∞–ª–æ—Ä–∏–π–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞" –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π', {
      reply_markup: MAIN_MENU,
    })
  }
}