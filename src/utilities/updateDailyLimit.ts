import cron, { ScheduledTask } from "node-cron"
import { getDefaultError } from "../helper"
import { User } from "../models/User"
import { CommandCtx, ConversationCtx } from "../types"

// –î–û–ü–ò–õ–ò–¢–¨ –§–£–ù–ö–¶–ò–Æ –ê–í–¢–û–û–ë–ù–û–í–õ–ï–ù–ò–Ø –õ–ò–ú–ò–¢–ê –ö–ê–ñ–î–´–ô –î–ï–ù–¨
export const updateDailyLimit = async (ctx: CommandCtx | ConversationCtx, cronTask?: ScheduledTask) => {
  if (!ctx.from) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ')
    return getDefaultError(ctx)
  }

  const userId = { telegramId: ctx.from.id }
  const user = await User.findOne(userId)
  const initialDailyLimit = user?.dailyLimit

  const overwriteDailyLimit = async () => {
    await User.findOneAndUpdate(userId, {
      todayRestLimit: initialDailyLimit,
    })
    await ctx.reply(`‚úÖ–í–∞—à –æ—Å—Ç–∞—Ç–æ–∫ –∫–∞–ª–æ—Ä–∏–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –æ–±–Ω—É–ª—ë–Ω: ${initialDailyLimit} –∫–∫–∞–ª`)
  }
  console.log(cronTask)
  if (cronTask && cronTask.getStatus() === 'scheduled') return

  if (initialDailyLimit) {
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 02:00 –ú–°–ö
    cronTask = cron.schedule('* * * * *', () => {
      console.log('EVENT!');
      overwriteDailyLimit()
    }, {
      timezone: 'Europe/Moscow'
    })
  } else {
    await ctx.reply(`‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –æ–±–Ω—É–ª–µ–Ω–∏—è –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º—Ç–∞, –ø–æ–∂–ª—É–π—Å—Ç–∞, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –æ—Å—Ç–∞—Ç–æ–∫ –∫–∞–ª–æ—Ä–∏–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –≤—Ä—É—á–Ω—É—é üò•`)
  }
}