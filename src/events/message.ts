import { client } from '..'
import { MAIN_MENU } from '../consts'
import { getDefaultError } from '../helper'
import { User, UserRoles } from '../models/User'
import { CommandCtx } from '../types'

export const message = async (ctx: CommandCtx) => {
  if (!ctx.from) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ')
    return getDefaultError(ctx)
  }

  const userId = { telegramId: ctx.from.id }
  const user = await User.findOne(userId)
  const userRole = user?.role
  const freeAttemptsRest = user?.freeTextAttempts

  if (userRole && [UserRoles.admin, UserRoles.subscriber].includes(userRole) || (userRole === UserRoles.user && Number(freeAttemptsRest) > 0)) {
    const waitingMessage = await ctx.reply('üßê –ù–∞–¥–æ –ø–æ–¥—É–º–∞—Ç—å...')

    const text = ctx.message?.text
    const chatId = Number(ctx.chat?.id)
    const messageId = waitingMessage.message_id

    if (!text) {
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è')
      throw new Error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è')
    }

    const response = await client.responses.create({
      model: "gpt-4.1-mini",
      input: [
        { role: "user", content:
          "–ü—Ä–µ–¥—Å—Ç–∞–≤—å —á—Ç–æ —Ç—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø–∏—Ç–∞–Ω–∏—é." +
          "–û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –∫–∞—Å–∞—é—Ç—Å—è –∫—É–ª–∏–Ω–∞—Ä–∏–∏ –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, –µ—Å–ª–∏ —Ç–µ–º–∞ –¥—Ä—É–≥–∞—è, —Ç–æ –º—è–≥–∫–æ –Ω–∞–º–µ–∫–Ω–∏ –≤ –æ—Ç–≤–µ—Ç–µ, —á—Ç–æ —Ç—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º." +
          "–û—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ —ç—Ç–æ–º —à–∞–±–ª–æ–Ω–µ –æ—Ç–≤–µ—Ç—å –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å: '" + text + "'. –û—Ñ–æ—Ä–º–∏ —Å–æ —Å–º–∞–π–ª–∏–∫–∞–º–∏ –∏ –±–µ–∑ –∑–≤—ë–∑–¥–æ—á–µ–∫."
        },
      ],
    })

    const freeAttemptsRestAfterResponse = Number(freeAttemptsRest) - 1

    if (userRole === UserRoles.user) {
      await User.findOneAndUpdate(userId, {
        freeTextAttempts: freeAttemptsRestAfterResponse,
      })
    }

    await ctx.api.deleteMessage(chatId, messageId)
    await ctx.reply(response.output_text)

    if (userRole === UserRoles.user) {
      const letterCheckedString =
        freeAttemptsRestAfterResponse === 1
          ? `–æ—Å—Ç–∞–ª—Å—è ${freeAttemptsRestAfterResponse} –ø—Ä–æ–±–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å`
          : `–æ—Å—Ç–∞–ª–æ—Å—å ${freeAttemptsRestAfterResponse} –ø—Ä–æ–±–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤`

      await ctx.reply(`–£ –í–∞—Å ${letterCheckedString}! ‚è≥`)
    }

  } else {
    await ctx.reply('–£ –í–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø—Ä–æ–±–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ãüò¢ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ "–ö–∞–ª–æ—Ä–∏–π–Ω–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞" –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π', {
      reply_markup: MAIN_MENU,
    })
  }
}